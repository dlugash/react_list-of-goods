{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","onStart","reset","setState","getStarted","sort","prev","cur","localeCompare","reverseList","reverse","sortByLength","a","b","length","this","className","type","onClick","map","good","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"mPAQMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,E,4MACJC,MAAQ,CACNC,MAAM,GAAD,OAAMH,GACXI,SAAS,G,EAGXC,MAAQ,WACN,EAAKC,UAAS,iBAAO,CACnBH,MAAM,GAAD,OAAMH,Q,EAIfO,WAAa,WACX,EAAKD,UAAS,iBAAO,CACnBF,SAAS,O,EAIbI,KAAO,WACL,EAAKF,UAAS,SAACJ,GAAD,MAAY,CACxBC,MAAO,YAAID,EAAMC,OAAOK,MAAK,SAACC,EAAMC,GAAP,OAAeD,EAAKE,cAAcD,W,EAInEE,YAAc,WACZ,EAAKN,UAAS,SAAAJ,GAGZ,MAAO,CACLC,MAHoB,YAAID,EAAMC,OAAOU,e,EAQ3CC,aAAe,WACb,EAAKR,UAAS,SAACJ,GAAD,MAAY,CACxBC,MAAO,YAAID,EAAMC,OAAOK,MACtB,SAACO,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,e,4CAK7B,WACE,MAA2BC,KAAKhB,MAAxBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAEf,OACE,qBAAKe,UAAU,MAAf,SACGf,EAEG,mCACE,wBACEe,UAAU,qBACVC,KAAK,SACLC,QAASH,KAAKX,WAHhB,qBAUF,qCACE,oBAAIY,UAAU,aAAd,mBACA,sBAAKA,UAAU,eAAf,UACE,wBACEA,UAAU,uBACVC,KAAK,SACLC,QAASH,KAAKN,YAHhB,qBAOA,wBACEO,UAAU,yBACVC,KAAK,SACLC,QAASH,KAAKV,KAHhB,iCAOA,wBACEW,UAAU,0BACVC,KAAK,SACLC,QAASH,KAAKJ,aAHhB,4BAOA,wBACEK,UAAU,qBACVC,KAAK,SACLC,QAASH,KAAKb,MAHhB,sBAQF,oBAAIc,UAAU,YAAd,SACGhB,EAAMmB,KAAI,SAACC,GAAD,OACT,oBAEEJ,UAAU,kBAFZ,SAIE,+BAAOI,KAHFA,iB,GA/FPC,IAAMC,eA6GTxB,IC/HfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0694daef.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\ntype State = {\n  goods: string[],\n  onStart: boolean,\n};\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.PureComponent<{}, State> {\n  state = {\n    goods: [...goodsFromServer],\n    onStart: true,\n  };\n\n  reset = () => {\n    this.setState(() => ({\n      goods: [...goodsFromServer],\n    }));\n  };\n\n  getStarted = () => {\n    this.setState(() => ({\n      onStart: false,\n    }));\n  };\n\n  sort = () => {\n    this.setState((state) => ({\n      goods: [...state.goods].sort((prev, cur) => prev.localeCompare(cur)),\n    }));\n  };\n\n  reverseList = () => {\n    this.setState(state => {\n      const reversedGoods = [...state.goods].reverse();\n\n      return {\n        goods: reversedGoods,\n      };\n    });\n  };\n\n  sortByLength = () => {\n    this.setState((state) => ({\n      goods: [...state.goods].sort(\n        (a, b) => a.length - b.length,\n      ),\n    }));\n  };\n\n  render() {\n    const { goods, onStart } = this.state;\n\n    return (\n      <div className=\"App\">\n        {onStart\n          ? (\n            <>\n              <button\n                className=\"App__button--start\"\n                type=\"button\"\n                onClick={this.getStarted}\n              >\n                START\n              </button>\n            </>\n          )\n          : (\n            <>\n              <h1 className=\"App__title\">Goods</h1>\n              <div className=\"App__buttons\">\n                <button\n                  className=\"App__button--reverse\"\n                  type=\"button\"\n                  onClick={this.reverseList}\n                >\n                  Reverse\n                </button>\n                <button\n                  className=\"App__button--sortAlpha\"\n                  type=\"button\"\n                  onClick={this.sort}\n                >\n                  Sort alphabetically\n                </button>\n                <button\n                  className=\"App__button--sortLength\"\n                  type=\"button\"\n                  onClick={this.sortByLength}\n                >\n                  Sort by length\n                </button>\n                <button\n                  className=\"App__button--reset\"\n                  type=\"button\"\n                  onClick={this.reset}\n                >\n                  Reset\n                </button>\n              </div>\n              <ul className=\"GoodsList\">\n                {goods.map((good) => (\n                  <li\n                    key={good}\n                    className=\"GoodsList__item\"\n                  >\n                    <span>{good}</span>\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}